# This is a basic workflow to help you get started with Actions

name: Build Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup:
    name: Update Assets
    # Set machine up, clone repo
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: actions-marketplace-validations/curoky_cleanup-disk-action@master
        with:
          retain: "python,node"

      - name: Install hub
        run: |
          sudo apt-get update
          sudo apt-get install -y hub
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 25
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9" #install the python needed
          
      # Optimize images
      - name: Optimize images
        run: |
          # git fetch --tags --depth=50
          sudo apt install -y optipng
          python scripts/optimize.py
          git config --global user.name 'Buildbot'
          git config --global user.email 'buildbot@users.noreply.github.com'
          git add .
          git commit -m "Optimize images"
          git push origin main

      # Run assets build logic
      - name: execute py script
        run: |
          python gen_config.py
      - name: commit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'Buildbot'
          git config --global user.email 'buildbot@users.noreply.github.com'
          git repack -Ad
          git prune
          find . -name "*~" -type f -delete
          # sudo apt-get install optipng
          # find games/ -name '*.png' -print0 | xargs -0 optipng -strip all
          git add assets.json last_versions.json
          git commit -m "Update assets"
          git push origin main
          set -x
          assets=()
          for asset in $(find . -name "*.7z*"); do
            assets+=("-a" "${asset}")
          done
          hub release create "${assets[@]}" -m "${GITHUB_SHA::8}" "${GITHUB_SHA::8}"